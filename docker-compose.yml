# мониторинг логов приложений используя кластер Elasticsearch 


version: '3'

services:


  # Кластер elasticsearch
  # E L A S T I C S E A R C H   C L U S T E R  B E G I N -----------------------------------------------------------
  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.7.0
    container_name: es01
    restart: unless-stopped
    environment:
      - node.name=es01
      - cluster.name=es-log-monitor-cluster

      - discovery.seed_hosts=es02,es03
      - cluster.initial_master_nodes=es01,es02,es03

      # - cluster.initial_master_nodes=es01

      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      # добавить это к каждой службе эластик если свободного места на диске < 10%
      # в противном случае шарды не будут двигаться
      # - cluster.routing.allocation.disk.threshold_enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - 9099:9200
    volumes:
      - data01:/usr/share/elasticsearch/data

  es02:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.7.0
    container_name: es02
    restart: unless-stopped
    environment:
      - node.name=es02
      - cluster.name=es-log-monitor-cluster
      - discovery.seed_hosts=es01,es03
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data02:/usr/share/elasticsearch/data
  
  es03:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.7.0
    container_name: es03
    restart: unless-stopped
    environment:
      - node.name=es03
      - cluster.name=es-log-monitor-cluster
      - discovery.seed_hosts=es01,es02
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data03:/usr/share/elasticsearch/data
  # E L A S T I C S E A R C H   C L U S T E R  E N D -----------------------------------------------------------
  
  
  
  # Kibana. Визуализация данных elasticsearch
  kibana01:
    image: docker.elastic.co/kibana/kibana:7.7.0
    container_name: kibana01
    restart: unless-stopped
    # ports:
    #   - 5601:5601
    environment:
      ELASTICSEARCH_HOSTS: '["http://es01:9200","http://es02:9200","http://es03:9200"]'
  

  # Caddy HTTP сервер, добавлен для базовой аутентификации к Кибане
  # и ограничения доступа к elasticsearch со стороны внешних программ.
  # Параметры проксирования определены в Caddyfile
  log-monitor-caddy:
    image: caddy:2.0.0-alpine
    container_name: log-monitor-caddy
    restart: unless-stopped
    ports:
      - '9094:8080'
      - '9095:8081'
    volumes:
      - ./configs/Caddyfile:/etc/caddy/Caddyfile
      - ./www:/www


  # Portainer. Управление докер контейнерами хоста
  log-monitor-portainer:
    # image: portainer/portainer:1.24.0
    image: portainer/portainer-ce
    container_name: log-monitor-portainer
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
  
  

# Данные
volumes:
  data01:
  data02:
  data03:
  portainer_data:

# outer network to communicate with other services 
networks:
    default:
      external:
        name: auth_proxy_network
